<UserControl x:Class="LanguageTool.WordAddin.Views.TemplateList"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:ViewModels="clr-namespace:LanguageTool.WordAddin.ViewModels"
             xmlns:local="clr-namespace:LanguageTool.WordAddin.Views"
             mc:Ignorable="d"  
             d:DesignHeight="500" d:DesignWidth="250"
             MinWidth="300"
             d:DataContext="{d:DesignInstance {x:Type ViewModels:TemplateViewModel}, IsDesignTimeCreatable=True}">
    <UserControl.Resources>

        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Fill" Color="#FF2B579A"/>
        <SolidColorBrush x:Key="Expander.Normal.Arrow.Stroke" Color="Black"/>

        <Style x:Key="ExpanderButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Data="M 0,0L 0,7L 3.5,3.5L 0,0 Z" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Normal.Arrow.Stroke}" StrokeThickness="0.5" VerticalAlignment="Center" Margin="0,2,0,0"/>
                                <!--<Path x:Name="a" Data="M 5,0L 0,5.5L 5,5.5L 5,0 Z" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Normal.Arrow.Stroke}" StrokeThickness="0.5" VerticalAlignment="Center" Margin="0,2,0,0"/>-->
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 5,0L 0,5.5L 5,5.5L 5,0 Z"/>
                                <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="Transparent"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="Transparent"/>
                            </Trigger>
                            <!--<Trigger Property="IsEnabled" Value="false">
                                
                            </Trigger>-->
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ExpanderStyle" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border>
                            <DockPanel>
                                <Grid DockPanel.Dock="Top" >
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="Auto"/>
                                        <ColumnDefinition Width="4"/>
                                        <ColumnDefinition />
                                    </Grid.ColumnDefinitions>
                                    <ToggleButton x:Name="HeaderSite"
                                              IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                              Style="{StaticResource ExpanderButtonStyle}" />
                                    <TextBlock Grid.Column="2" Text="{Binding Name}"/>
                                </Grid>
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=HeaderSite}" Margin="24,4,8,0"/>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <!--<BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>

        <SolidColorBrush x:Key="Expander.MouseOver.Arrow.Fill" Color="#FF2B579A"/>
        <SolidColorBrush x:Key="Expander.Normal.Arrow.Stroke" Color="Black"/>

        <Style x:Key="ExpanderButtonStyle" TargetType="{x:Type ToggleButton}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border Padding="{TemplateBinding Padding}">
                            <Grid Background="Transparent" SnapsToDevicePixels="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="10"/>
                                    <ColumnDefinition Width="*"/>
                                </Grid.ColumnDefinitions>
                                <Path x:Name="arrow" Data="M 0,0L 0,7L 3.5,3.5L 0,0 Z" HorizontalAlignment="Center" SnapsToDevicePixels="false" Stroke="{StaticResource Expander.Normal.Arrow.Stroke}" StrokeThickness="0.5" VerticalAlignment="Center" Margin="0,2,0,0"/>
                                <ContentPresenter Grid.Column="1" HorizontalAlignment="Left" Margin="4,0,0,0" RecognizesAccessKey="True" SnapsToDevicePixels="True" VerticalAlignment="Center"/>
                            </Grid>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="true">
                                <Setter Property="Data" TargetName="arrow" Value="M 5,0L 0,5.5L 5,5.5L 5,0 Z"/>
                                <Setter Property="Fill" TargetName="arrow" Value="Black"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                                <Setter Property="Stroke" TargetName="arrow" Value="{StaticResource Expander.MouseOver.Arrow.Fill}"/>
                            </Trigger>
                            --><!--<Trigger Property="IsEnabled" Value="false">
                                
                            </Trigger>--><!--
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <Style x:Key="ExpanderStyle" TargetType="{x:Type ContentControl}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ContentControl}">
                        <Border>
                            <DockPanel>
                                <ToggleButton x:Name="HeaderSite" DockPanel.Dock="Top" 
                                              Content="{Binding Name}" IsChecked="{Binding IsExpanded, Mode=TwoWay}"
                                              Style="{StaticResource ExpanderButtonStyle}" />
                                <ContentPresenter x:Name="ExpandSite" DockPanel.Dock="Bottom" Visibility="{Binding IsChecked, Converter={StaticResource BooleanToVisibilityConverter}, ElementName=HeaderSite}" Margin="24,4,8,0"/>
                            </DockPanel>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->
    </UserControl.Resources>

    <Grid Background="#FFF6F6F6">

        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto" MinWidth="300"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Grid Background="White">
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition Height="8"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <ListView x:Name="SnippetsList" ItemsSource="{Binding SnippetItems}" SelectedItem="{Binding SelectedSnippet, Mode=TwoWay}"
                  ScrollViewer.HorizontalScrollBarVisibility="Disabled" 
                          ScrollViewer.CanContentScroll="False"
                          BorderThickness="0,0,0,1" BorderBrush="#FFD4D4D4">
                    <ListView.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="{Binding Width, RelativeSource={RelativeSource AncestorType=ListView}}" Margin="0,0,0,8">
                                <ContentControl Style="{StaticResource ExpanderStyle}" Margin="4,0" HorizontalAlignment="Center">
                                    <TextBlock Text="{Binding Body}" TextWrapping="Wrap" />
                                </ContentControl>
                                <!--<Expander Width="300" Header="{Binding Name}" IsExpanded="{Binding IsExpanded}">
                            <TextBlock Text="{Binding Body}" TextWrapping="Wrap"/>
                        </Expander>-->
                            </Grid>
                        </DataTemplate>
                    </ListView.ItemTemplate>
                </ListView>
                <Button Grid.Row="2"  Content="Insert" 
                        Command="{Binding InsertCommand}"
                        CommandParameter="{Binding SelectedItem, ElementName=SnippetsList}"
                        HorizontalAlignment="Right" Padding="8,1,8,2" Margin="0,0,8,8" IsEnabled="{Binding SelectedItem, TargetNullValue=False, ElementName=SnippetsList}" />
            </Grid>
            <GridSplitter Grid.Column="1" Width="4" BorderThickness="1,0" 
                          VerticalAlignment="Stretch" ResizeBehavior="PreviousAndNext" Background="#FF686868" BorderBrush="#FF3F3F46" >
            </GridSplitter>
            <Grid Grid.Column="2">
                <TextBlock Text="{Binding SelectedText}" VerticalAlignment="Center" Margin="24,0" TextWrapping="Wrap"/>
            </Grid>
        </Grid>
    </Grid>
    <!--<Grid Background="Transparent">
        <ListView ItemsSource="{Binding SnippetItems}" HorizontalAlignment="Stretch" Width="250" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
            <ListView.ItemTemplate>
                <DataTemplate>
                    <Grid Width="{Binding Width, RelativeSource={RelativeSource AncestorType=ListView}}" Margin="0,0,0,8">
                        <ContentControl Style="{StaticResource ExpanderStyle}" Margin="4,0" HorizontalAlignment="Center" Width="200">
                            <TextBlock Text="{Binding Body}" TextWrapping="Wrap"/>
                        </ContentControl>
                    </Grid>
                </DataTemplate>
            </ListView.ItemTemplate>
        </ListView>
    </Grid>-->
</UserControl>
